font_family      DejaVu Sans Mono
bold_font        DejaVu Sans Mono Bold
italic_font      DejaVu Sans Mono Oblique
bold_italic_font DejaVu Sans Mono Bold Oblique

font_size 9

background_opacity 0.85

# -- Tab styling --

# NOTE:
#  1. When enabling a layout, add it to the dictionary below.
#  2. The title is taken from zsh (check for `DISABLE_AUTO_TITLE` env var).
tab_title_template "{index}: [{num_windows}{({'stack':'+', 'splits':'#', 'tall':'<', 'fat':'^'}[layout_name])}{keyboard_mode}] {title} "
tab_bar_style separator
tab_separator "| "

inactive_tab_background #00ff00
tab_bar_background      #00ff00
tab_bar_min_tabs 1

# Make active tab more visible.
inactive_border_color #606060
inactive_text_alpha 0.4
# --

mouse_enable true

# -- Unmap Ctrl-<Tab> and Ctrl-Shift-<Tab>.
#
#  1. They switch to the next/previous tab.
#  2. I need those in nvim for completion.

map ctrl+tab
map ctrl+shift+tab

# -- Replicate my tmux keys in kitty.
enabled_layouts tall,splits,fat,stack

# Enter window mode on Ctrl-<Space>
map --new-mode wm --on-action end ctrl+space

# New tab (i.e. a window in tmux).
map --mode wm --on-action end c new_tab
# New tab (keep working dir)
map --mode wm shift+c new_tab_with_cwd
# Close a tab and all its windows.
map --mode wm & close_tab
# Interactively change the title of the current tab.
map --mode wm f2 set_tab_title " "
# Go to next tab
map --mode wm n next_tab
# Go to prev tab
map --mode wm p prev_tab
# Close a window.
map --mode wm x close_window

# Select tab by index
map --mode wm 1 goto_tab 1
map --mode wm 2 goto_tab 2
map --mode wm 3 goto_tab 3
map --mode wm 4 goto_tab 4
map --mode wm 5 goto_tab 5
map --mode wm 6 goto_tab 6
map --mode wm 7 goto_tab 7
map --mode wm 8 goto_tab 8
map --mode wm 9 goto_tab 9

# A new horizontal split window (i.e. a pane in tmux).
map --mode wm % launch --cwd=current --location=vsplit
map --mode wm | launch --cwd=current --location=vsplit

# A new vertical split window (i.e. a pane in tmux).
# NOTE: Shift-0x27 is Shift-', i.e. " (double quote).
map --mode wm shift+0x27 launch --cwd=current --location=hsplit
map --mode wm _          launch --cwd=current --location=hsplit

# When you are in stack layout, the current window takes up all the available
# space resembling a zoom in.
map --mode wm z       toggle_layout stack
map --mode wm shift+h goto_layout tall
map --mode wm shift+k goto_layout fat
map --mode wm shift+3 goto_layout splits

# Reset the window size.
map --mode wm = resize_window reset

# Enter "resize" mode
map --mode wm r start_resizing_window

# Enter "__visual_select__" mode.
#
#  * If only one window, do nothing.
#  * If two windows, move focus from one to the other.
#  * If more than two windows, display numbers on unfocused windows. Press that
#  number to focus the window.
#
#  NOTE: there's no way to exit except for actually changing window.
map --mode wm w focus_visible_window
map --mode wm s swap_with_window

# Switch focus to the neighboring window in the indicated direction.
map --mode wm ctrl+h neighboring_window left
map --mode wm ctrl+l neighboring_window right
map --mode wm ctrl+k neighboring_window up
map --mode wm ctrl+j neighboring_window down

# Exit window mode on <Esc>.
map --mode wm esc pop_keyboard_mode
